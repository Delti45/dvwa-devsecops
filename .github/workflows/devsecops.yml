name: DevSecOps CI Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build DVWA image
        run: docker build -t dvwa-devsecops .

      - name: Save image as artifact
        run: docker save dvwa-devsecops > dvwa-devsecops.tar

      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: dvwa-image
          path: dvwa-devsecops.tar

  sca:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Snyk CLI
        run: |
          curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk scan
        run: snyk test --all-projects --severity-threshold=high || true

      - name: Save Snyk report
        run: snyk test --all-projects --json-file-output=snyk-report.json || true

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk-report.json

  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Pull PHPStan image
        run: docker pull phpstan/phpstan

      - name: Run PHPStan analysis
        run: docker run --rm -v ${{ github.workspace }}:/app ghcr.io/phpstan/phpstan analyse /app --error-format=json > phpstan-report.json || true

      - name: Upload PHPStan report
        uses: actions/upload-artifact@v4
        with:
          name: phpstan-report
          path: phpstan-report.json

  secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitLeaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .gitleaks.toml

  dast:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download DVWA image artifact
        uses: actions/download-artifact@v4
        with:
          name: dvwa-image

      - name: Load Docker image
        run: docker load < dvwa-devsecops.tar

      - name: Start DVWA with Docker Compose
        run: docker compose up -d

      - name: Wait for DVWA to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:4280/login.php | grep -q "DVWA"; then
              echo "DVWA ready!"
              exit 0
            fi
            echo "Waiting for DVWA..."
            sleep 5
          done
          echo "DVWA failed to start in time"
          docker compose logs
          exit 1

      - name: Run OWASP ZAP Baseline Scan
        if: always()
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          target: "http://localhost:4280"
          cmd_options: "-a"
          issue_title: "[ZAP SCAN] ${{ github.sha }}"
          artifact_name: zap-report

      - name: Stop DVWA containers
        run: docker compose down

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download DVWA image artifact
        uses: actions/download-artifact@v4
        with:
          name: dvwa-image

      - name: Load Docker image
        run: docker load < dvwa-devsecops.tar

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: dvwa-devsecops:latest
          severity: HIGH,CRITICAL
          format: json
          output: trivy-report.json

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Check for vulnerabilities and fail if found
        run: |
          if grep -q '"Severity": "HIGH"' trivy-report.json || grep -q '"Severity": "CRITICAL"' trivy-report.json; then
            echo "High or Critical vulnerabilities found!"
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push Docker image
        run: |
          docker tag dvwa-devsecops:latest delti45/dvwa-devsecops:latest
          docker push delti45/dvwa-devsecops:latest

